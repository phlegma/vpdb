<vpack>
	<meta>
		<name>VVVV</name>
        <license>https://vvvv.org/documentation/licensing</license>
	</meta>
	<install>
        using System;
        using System.Xml;
        using System.Net;
        using System.IO;

        var baseurl = "http://vvvv.org:8111";
        var initreguest = "/guestAuth/app/rest/builds/buildType:vvvv45_alpha_x64,status:SUCCESS";

        var client = new WebClient();
        Console.WriteLine("Fetching latest VVVV from TeamCity");

        var stream = client.OpenRead(baseurl + initreguest);
        var reader = new StreamReader(stream);
        var xmltext = reader.ReadToEnd();

        Console.WriteLine("Parsing xml data");
        var builddoc = new XmlDocument();
        builddoc.LoadXml(xmltext);
        var artifactnode = builddoc.SelectSingleNode("/build/artifacts");
        var artifactrequest = artifactnode.Attributes["href"].InnerText;

        Console.WriteLine("Fetching artifacts");
        stream = client.OpenRead(baseurl + artifactrequest);
        reader = new StreamReader(stream);
        xmltext = reader.ReadToEnd();

        Console.WriteLine("Parsing artifacts");
        var artdoc = new XmlDocument();
        artdoc.LoadXml(xmltext);

        var nodelist = artdoc.SelectSingleNode("/files").ChildNodes;
        var vvvvurl = "";
        var vvvvzip = "";
        var addonsurl = "";
        var addonszip = "";
        for (int i = 0; i < nodelist.Count; i++)
        {
            var filenode = nodelist.Item(i);
            if (filenode == null) continue;

            if (filenode.Attributes["name"].InnerText.StartsWith("vvvv_"))
            {
                vvvvurl = baseurl + filenode["content"].Attributes["href"].InnerText;
                vvvvzip = filenode.Attributes["name"].InnerText;
            }
            if (filenode.Attributes["name"].InnerText.StartsWith("addons_"))
            {
                addonsurl = baseurl + filenode["content"].Attributes["href"].InnerText;
                addonszip = filenode.Attributes["name"].InnerText;
            }
        }

        try
        {
            Console.WriteLine("Downloading and extracting VVVV");
            var locvvvvzip = Path.Combine(Pack.TempDir, vvvvzip);
            Download(vvvvurl, locvvvvzip);
            Extract(locvvvvzip, Pack.TempDir);
            CopyDir(Path.Combine(Pack.TempDir, Path.GetFileNameWithoutExtension(vvvvzip)), VVVV.Dir);
        }
        catch (Exception e)
        {
            Console.WriteLine("Something dark and sinister is lurking around VVVV");
            Console.WriteLine(e.Message);
        }

        try
        {
            Console.WriteLine("Downloading and extracting the Addonpack");
            var locaddonszip = Path.Combine(Pack.TempDir, addonszip);
            Download(addonsurl, locaddonszip);
            Extract(locaddonszip, VVVV.Dir);
        }
        catch (Exception e)
        {
            Console.WriteLine("Something dark and sinister is lurking around addonpack");
            Console.WriteLine(e.Message);
        }
	</install>
</vpack>
